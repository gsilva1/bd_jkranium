
Tarefas:

3. Criação de pelo menos 10 enunciados de consulta e o respectivo SQL
4. Criação de pelo menos 2 enunciados de alteração de tuplas e o respectivo SQL
5. Criação de pelo menos 2 enunciados de exclusão de tuplas e o respectivo SQL


Tarefas Concluídas:

1. Criação de pelo menos 5 tabelas em SQL.
2. Inserção de pelo menos 2 tuplas em cada tabela criada.


Informações Complementares:

- O trabalho deve ser feito, no máximo, em duplas.
- O trabalho completo deve ser enviado pelo Moodle até o dia 01 de junho às 23h55min.
- NÃO serão aceitos trabalhos encaminhados após a data e horário definidos.
- O trabalho valerá 2,0 ponto na nota do semestre.
- Caso seja identificada cópia de trabalho, seja de colega ou qualquer outra fonte, o trabalho
será ZERADO.



## Tarefa 1

Clientes([CnpjCliente], NomeCliente, ContatoCliente, TelCliente1, TelCliente2, EmailCliente)
drop table cliente;
purge recyclebin;
CREATE TABLE Cliente(
	cnpj_cliente	VARCHAR2(15),
	nome_cliente 	VARCHAR2(50),
	contato_cliente VARCHAR2(50),
	tel1_cliente	VARCHAR2(15),
	tel2_cliente	VARCHAR2(15),
	email_cliente	VARCHAR2(40),
    CONSTRAINT pk_cliente PRIMARY KEY(cnpj_cliente)
);
************************************************************************************************
Funcionario([CpfFuncionárioEmissor], NomeFunc, TeleFunc)
drop table Funcionario;
purge recyclebin;
CREATE TABLE Funcionario( 
    cpf_funcionario	 VARCHAR2(15),
	nome_funcionario VARCHAR2(50),
	tel_funcionario	 VARCHAR2(15),
    CONSTRAINT pk_funcionario PRIMARY KEY(cpf_funcionario)
);
************************************************************************************************
Fornecedor ([CnpjForn], NomeForn, TelForn, VendForn, EmailForn)
drop table fornecedor;
purge recyclebin;
CREATE TABLE Fornecedor(
	cnpj_fornecedor    VARCHAR2(15),
	nome_fornecedor	   VARCHAR2(50),
	empresa_fornecedor VARCHAR2(50),
	tel_fornecedor	   VARCHAR2(15),
	email_fornecedor   VARCHAR2(40),
    CONSTRAINT  pk_fornecedor PRIMARY KEY(cnpj_fornecedor)
);
************************************************************************************************
Endereço ([CodEnder], CnpjCliente, CnpjForn, CodFuncionario, RuaEnder, BairroEnder, CidadeEnder, UFEnder)
CnpjCliente referencia a tabela clientes
CnpjForn referencia a Fornecedor
CpfFuncionarioEmissor   referencia Emissor.
//não ficou claro o pq dos dados de todas as outras tabelas
drop table endereco;
purge recyclebin;
CREATE TABLE Endereco(                  
	id_endereco	      VARCHAR2(15),
	uf_endereco		  VARCHAR2(2),
	cidade_endereco	  VARCHAR2(30),
	bairro_endereco	  VARCHAR2(30),
	cep_endereco   	  VARCHAR2(15),
	rua_endereco	  VARCHAR2(30),
	CONSTRAINT pk_endereco PRIMARY KEY(id_endereco)
);
	
************************************************************************************************
Item ([CodItem], QtdItem, ValorItem, CnpjForn)
CnpjForn referencia Fornecedor

TIPO DE ITEM = 1 para servico| 2 - para produtos
drop table item;
purge recyclebin;
CREATE TABLE Item(
	id_item	    	NUMBER,
	tipo_item       NUMBER,         
    cnpj_fornecedor	VARCHAR2(15),
	qtd_item		NUMBER,
	valor_item		NUMBER,
    item_descricao  VARCHAR2(50),
	CONSTRAINT pk_item PRIMARY KEY(id_item),
	CONSTRAINT fk_item_forn FOREIGN KEY(cnpj_fornecedor) REFERENCES Fornecedor(cnpj_fornecedor),
    CONSTRAINT ck_tipoitem  CHECK (tipo_item in (1, 2))
);

************************************************************************************************
FormaPagamento ([id_formaPag],DescricaoFormaPag)
drop table formapagamento;
purge recyclebin;
CREATE TABLE FormaPagamento(
    id_formapagamento           NUMBER,
    descricao_formapagamento    VARCHAR2(30),
    CONSTRAINT pk_formpagamento PRIMARY KEY(id_formapagamento)
);
************************************************************************************************
Orçamento ([NumOrcamento], CnpjCliente, CodFunc, CodItem, ValorOrcamento, FormPagOrcamento, DescrOrcamento, DataOrcamento)
CnpjCliente referencia cliente.
CpfFuncionarioEmissor referencia a Emissor. 
CodItem referencia Item.
drop table orcamento;
purge recyclebin;	 
CREATE TABLE Orcamento(
	id_orcamento       NUMBER,
	cnpj_cliente	   VARCHAR2(15),
	cpf_funcionario    VARCHAR2(15),
	id_item  	       NUMBER,
	valor_orcamento    NUMBER,
	id_formapagamento  NUMBER, 
	descr_orcamento	   VARCHAR2(100),
	data_orcamento	   DATE,
	CONSTRAINT pk_orcamento PRIMARY KEY(id_orcamento),
	CONSTRAINT fk_orc_cli   FOREIGN KEY(cnpj_cliente) REFERENCES Cliente(cnpj_cliente),
	CONSTRAINT fk_orc_func  FOREIGN KEY(cpf_funcionario) REFERENCES  Funcionario(cpf_funcionario),	
	CONSTRAINT fk_orc_item  FOREIGN KEY(id_item) REFERENCES Item(id_item),
    CONSTRAINT fk_orc_formp FOREIGN KEY(id_formapagamento) REFERENCES FormaPagamento(id_formapagamento)
);
************************************************************************************************
## Tarefa 2

####tabela cliente

INSERT INTO cliente VALUES('50403020101','DHB servicos de engenharia','antonio da silva', '(51)34383460', '(51)984365711','antonioss@gmail.com');
INSERT INTO cliente VALUES('50403020102','IJS engenharia','valdemar', '(51)34384560', '(51)98565711','valdemarss@gmail.com');
INSERT INTO cliente VALUES('50403020103','DANA Albarus','joaquim', '(55)34964860', '(51)984365778','joaquimdeportugal@gmail.com');
INSERT INTO cliente VALUES('50403020104','ARP construções','paulo', '(55)34964122', '(51)98436123','paulo@arpconstrucoes.com');


###tabela Funcionario
select * from funcionario;
INSERT INTO Funcionario VALUES('80706050401', 'Alex Sena', '(51)984365711');
INSERT INTO Funcionario VALUES('80706050402', 'Guilherme Cunha', '(51)984365715');
INSERT INTO Funcionario VALUES('80706050403', 'Joao Eufrasio', '(51)984365723');

###tabela fornecedor

INSERT INTO fornecedor VALUES('44332211001', 'sistemas anti incendio beta', 'carlos', '(51)98435712','contato1@saib.com.br'); 
INSERT INTO fornecedor VALUES('44332211002', 'adpatar sistemas', 'jose', '(51)984353782','contatoadaptar@adaptar.com.br'); 
INSERT INTO fornecedor VALUES('44332211003', 'AC equipamentos anti incendios', 'joana', '(51)98435712','contato1@saib.com.br'); 

###tabela endereco
select * from endereco;
INSERT INTO endereco VALUES('50403020101', 'RS', 'Porto Alegre', 'Jardim das Flores', '94000-000', 'Rua Flor de Liz,6134');
INSERT INTO endereco VALUES('50403020102', 'RS', 'Canoas', 'Recanto das Laranjeiras', '94000-000', 'Avenida Boqueirão,8344');
INSERT INTO endereco VALUES('50403020103', 'RS', 'Viamão',  'São Pedro', '94070-090', 'Rua Abc, 1246');
INSERT INTO endereco VALUES('80706050401', 'RS', 'Viamão',  'São Pedro', '94000-800', 'Rua antoonio Carlos,123');
INSERT INTO endereco VALUES('80706050402', 'RS', 'Viamão',  'São Pedro', '94250-000', 'Travessa 12, 345');
INSERT INTO endereco VALUES('80706050403', 'RS', 'Viamão',  'Santa rosa', '94040-000', 'Travessa Carlos Pereira,678');
INSERT INTO endereco VALUES('44332211001', 'RS', 'Porto Alegre',  'Sarandi', '94050-000', 'Rua CDE, 234');
INSERT INTO endereco VALUES('44332211002', 'RS', 'Gravatai',  'Morada do Vale 3', '94030-000', 'Rua EFFG, 345');
INSERT INTO endereco VALUES('44332211003', 'RS', 'Cachoeirinha',  'granja', '94340-000', 'Travessa A,678');

###tabela item
select * from item;
INSERT INTO item VALUES(1,1, NULL, 1, 200, 'Manutenção Preventiva Programada');
INSERT INTO item VALUES(2,1, NULL, 1, 150, 'Verificação dos Sistemas');
INSERT INTO item VALUES(3,1, NULL, 1, 500, 'Instalação de Sistema de combate a incendio');
INSERT INTO item VALUES(4,2, '44332211001', 10,  0.50, 'Parafuso para concreto 8mm');
INSERT INTO item VALUES(5,2, '44332211002', 20,  2.00, 'Bracadeira para concreto tipo c');
INSERT INTO item VALUES(6,2, '44332211001', 30,  6.90, 'Tubulacao anti chamas preta');
INSERT INTO item VALUES(7,2, '44332211002', 40,  8.00, 'Botoeira tipo 1');
INSERT INTO item VALUES(8,2, '44332211001', 50, 12.90, 'Botoeira autonoma');
INSERT INTO item VALUES(9,2, '44332211003', 60, 79.90, 'Detector de fumaça tipo 1');
INSERT INTO item VALUES(10,2,'44332211003', 70, 90.90, 'Detector de fumaça tipo 2');

###tabela FormaPagamento

INSERT INTO FormaPagamento VALUES(1,'Pagamento a vista');
INSERT INTO FormaPagamento VALUES(2,'Pagamento a vista em 30 dias');
INSERT INTO FormaPagamento VALUES(3,'Pagamento a vista em 60 dias');

###tabela orcamento 
select * from orcamento;
INSERT INTO orcamento VALUES(1, '50403020101', '80706050401', 1,   3750, 1, 'Manutencao em sistema de combate a indcendio',  to_date('22/05/2017', 'dd/mm/yyyy'));   
INSERT INTO orcamento VALUES(2, '50403020102', '80706050402', 10, 15808, 2, 'Instalação de detectore e correcao do sistema', to_date('10/05/2017', 'dd/mm/yyyy'));
INSERT INTO orcamento VALUES(3, '50403020103', '80706050403', 6,   1600, 3, 'Orçamento troca sistema tubulação',             to_date('17/05/2017', 'dd/mm/yyyy'));
INSERT INTO orcamento VALUES(4, '50403020101', '80706050401', 7,   1600, 3, 'Instalação de botoeiras',                       to_date('08/05/2017', 'dd/mm/yyyy'));
INSERT INTO orcamento VALUES(5, '50403020102', '80706050402', 8,   1600, 3, 'Instalação de botoeiras',                       to_date('08/05/2017', 'dd/mm/yyyy'));
INSERT INTO orcamento VALUES(6, '50403020103', '80706050403', 2,    150, 3, 'Verificação e teste do sistema',                to_date('07/05/2017', 'dd/mm/yyyy'));
INSERT INTO orcamento VALUES(7, '50403020101', '80706050401', 1,    150, 1, 'Verificação e teste do sistema',                to_date('03/05/2017', 'dd/mm/yyyy'));

************************************************************************************************

## Tarefa 3

1 - Exibir todos os orçamentos.

SELECT * FROM orcamento;


2 - Exibir para que clientes o funcionário Alex Sena fez orçamento. Apresentar o nome do cliente e o número do orcamento. 

SELECT o.id_orcamento, c.nome_cliente FROM orcamento o
    INNER JOIN cliente c ON o.cnpj_cliente = c.cnpj_cliente
        INNER JOIN funcionario f ON o.cpf_funcionario = f.cpf_funcionario
            WHERE f.nome_funcionario LIKE 'Alex Sena';

3 - Exibir quantidade de orcamentos realizados.

SELECT COUNT(*) AS QTD_ORCAMENTOS FROM orcamento;

4 - Exibir os clientes que não realizaram nenhum orçamento.

SELECT c.nome_cliente FROM cliente c
WHERE NOT EXISTS (SELECT * FROM orcamento o
                    WHERE o.cnpj_cliente = c.cnpj_cliente);

5 - qual a media dos valores dos orcamentos realizados?

SELECT AVG(valor_orcamento) AS MEDIA_ORCAMENTO FROM orcamento;


6 - Exibir o endereco completo de todos os clientes em ordem alfabetica crescente.

SELECT c.nome_cliente, e.* FROM cliente c, endereco e
    WHERE c.cnpj_cliente like e.id_endereco
        ORDER BY c.nome_cliente ASC;

7 - Quantos orcamentos foram somente de compra de produtos?

SELECT COUNT(*) AS QTD_ORC_PROD FROM orcamento
    INNER JOIN item on orcamento.id_item = item.id_item AND item.tipo_item = 2;

8 - quais orçamentos foram realizados na primeira quinzena de maio de 2017?

SELECT * FROM orcamento WHERE data_orcamento BETWEEN
    TO_DATE('01/05/2017', 'dd/mm/yyyy') AND TO_DATE('15/05/2017', 'dd/mm/yyyy');
    
9 - Exibir a quantidade de pessoas que estão registradas na base de dados em cada cidade.

SELECT COUNT(*) AS QTD_PESSOAS, cidade_endereco FROM endereco 
    GROUP BY cidade_endereco ORDER BY QTD_PESSOAS DESC;







